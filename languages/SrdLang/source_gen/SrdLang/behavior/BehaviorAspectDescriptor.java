package SrdLang.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myFeature__BehaviorDescriptor = new Feature__BehaviorDescriptor();
  private final BHDescriptor myUseCase__BehaviorDescriptor = new UseCase__BehaviorDescriptor();
  private final BHDescriptor myScreen__BehaviorDescriptor = new Screen__BehaviorDescriptor();
  private final BHDescriptor myICoverable__BehaviorDescriptor = new ICoverable__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return myFeature__BehaviorDescriptor;
      case 1:
        return myICoverable__BehaviorDescriptor;
      case 2:
        return myScreen__BehaviorDescriptor;
      case 3:
        return myUseCase__BehaviorDescriptor;
      default:
    }
    return null;
  }
  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x1ebab0354f0e4c1aL, 0x81628b734f2fc0d1L, 0x5d28744d28f7004aL), MetaIdFactory.conceptId(0x1ebab0354f0e4c1aL, 0x81628b734f2fc0d1L, 0x7d8333ad970aedb1L), MetaIdFactory.conceptId(0x1ebab0354f0e4c1aL, 0x81628b734f2fc0d1L, 0x5d28744d28f70068L), MetaIdFactory.conceptId(0x1ebab0354f0e4c1aL, 0x81628b734f2fc0d1L, 0x5d28744d28f70059L)).seal();
}
