package SrdLang.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptFeature = createDescriptorForFeature();
  /*package*/ final ConceptDescriptor myConceptFeatureReference = createDescriptorForFeatureReference();
  /*package*/ final ConceptDescriptor myConceptICoverable = createDescriptorForICoverable();
  /*package*/ final ConceptDescriptor myConceptScreen = createDescriptorForScreen();
  /*package*/ final ConceptDescriptor myConceptSharedFeature = createDescriptorForSharedFeature();
  /*package*/ final ConceptDescriptor myConceptSharedTestCase = createDescriptorForSharedTestCase();
  /*package*/ final ConceptDescriptor myConceptSharedUseCase = createDescriptorForSharedUseCase();
  /*package*/ final ConceptDescriptor myConceptTestCase = createDescriptorForTestCase();
  /*package*/ final ConceptDescriptor myConceptTestCaseReference = createDescriptorForTestCaseReference();
  /*package*/ final ConceptDescriptor myConceptUniqueFeature = createDescriptorForUniqueFeature();
  /*package*/ final ConceptDescriptor myConceptUniqueTestCase = createDescriptorForUniqueTestCase();
  /*package*/ final ConceptDescriptor myConceptUniqueUseCase = createDescriptorForUniqueUseCase();
  /*package*/ final ConceptDescriptor myConceptUseCase = createDescriptorForUseCase();
  /*package*/ final ConceptDescriptor myConceptUseCaseReference = createDescriptorForUseCaseReference();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptFeature, myConceptFeatureReference, myConceptICoverable, myConceptScreen, myConceptSharedFeature, myConceptSharedTestCase, myConceptSharedUseCase, myConceptTestCase, myConceptTestCaseReference, myConceptUniqueFeature, myConceptUniqueTestCase, myConceptUniqueUseCase, myConceptUseCase, myConceptUseCaseReference);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Feature:
        return myConceptFeature;
      case LanguageConceptSwitch.FeatureReference:
        return myConceptFeatureReference;
      case LanguageConceptSwitch.ICoverable:
        return myConceptICoverable;
      case LanguageConceptSwitch.Screen:
        return myConceptScreen;
      case LanguageConceptSwitch.SharedFeature:
        return myConceptSharedFeature;
      case LanguageConceptSwitch.SharedTestCase:
        return myConceptSharedTestCase;
      case LanguageConceptSwitch.SharedUseCase:
        return myConceptSharedUseCase;
      case LanguageConceptSwitch.TestCase:
        return myConceptTestCase;
      case LanguageConceptSwitch.TestCaseReference:
        return myConceptTestCaseReference;
      case LanguageConceptSwitch.UniqueFeature:
        return myConceptUniqueFeature;
      case LanguageConceptSwitch.UniqueTestCase:
        return myConceptUniqueTestCase;
      case LanguageConceptSwitch.UniqueUseCase:
        return myConceptUniqueUseCase;
      case LanguageConceptSwitch.UseCase:
        return myConceptUseCase;
      case LanguageConceptSwitch.UseCaseReference:
        return myConceptUseCaseReference;
      default:
        return null;
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForFeature() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SrdLang", "Feature", 0x1ebab0354f0e4c1aL, 0x81628b734f2fc0d1L, 0x5d28744d28f7004aL);
    b.class_(false, true, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0x1ebab0354f0e4c1aL, 0x81628b734f2fc0d1L, 0x7d8333ad970aedb1L);
    b.origin("r:cf36dc58-6ee9-4602-8e57-b62fe23c125a(SrdLang.structure)/6712743119344304202");
    b.version(2);
    b.aggregate("testCases", 0x5d28744d28f7004dL).target(0x1ebab0354f0e4c1aL, 0x81628b734f2fc0d1L, 0x5d28744d28f70047L).optional(true).ordered(true).multiple(true).origin("6712743119344304205").done();
    b.aggregate("testCaseReferences", 0x5d28744d28f7004fL).target(0x1ebab0354f0e4c1aL, 0x81628b734f2fc0d1L, 0x5d28744d28f70041L).optional(true).ordered(true).multiple(true).origin("6712743119344304207").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFeatureReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SrdLang", "FeatureReference", 0x1ebab0354f0e4c1aL, 0x81628b734f2fc0d1L, 0x5d28744d28f70053L);
    b.class_(false, false, false);
    b.origin("r:cf36dc58-6ee9-4602-8e57-b62fe23c125a(SrdLang.structure)/6712743119344304211");
    b.version(2);
    b.associate("feature", 0x5d28744d28f70054L).target(0x1ebab0354f0e4c1aL, 0x81628b734f2fc0d1L, 0x7d8333ad97028690L).optional(false).origin("6712743119344304212").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForICoverable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SrdLang", "ICoverable", 0x1ebab0354f0e4c1aL, 0x81628b734f2fc0d1L, 0x7d8333ad970aedb1L);
    b.interface_();
    b.origin("r:cf36dc58-6ee9-4602-8e57-b62fe23c125a(SrdLang.structure)/9044129297346522545");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForScreen() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SrdLang", "Screen", 0x1ebab0354f0e4c1aL, 0x81628b734f2fc0d1L, 0x5d28744d28f70068L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0x1ebab0354f0e4c1aL, 0x81628b734f2fc0d1L, 0x7d8333ad970aedb1L);
    b.origin("r:cf36dc58-6ee9-4602-8e57-b62fe23c125a(SrdLang.structure)/6712743119344304232");
    b.version(2);
    b.aggregate("useCases", 0x5d28744d28f7006bL).target(0x1ebab0354f0e4c1aL, 0x81628b734f2fc0d1L, 0x5d28744d28f70067L).optional(true).ordered(true).multiple(true).origin("6712743119344304235").done();
    b.aggregate("useCaseReferences", 0x5d28744d28f7006dL).target(0x1ebab0354f0e4c1aL, 0x81628b734f2fc0d1L, 0x5d28744d28f70061L).optional(true).ordered(true).multiple(true).origin("6712743119344304237").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSharedFeature() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SrdLang", "SharedFeature", 0x1ebab0354f0e4c1aL, 0x81628b734f2fc0d1L, 0x7d8333ad97028690L);
    b.class_(false, false, true);
    b.super_("SrdLang.structure.Feature", 0x1ebab0354f0e4c1aL, 0x81628b734f2fc0d1L, 0x5d28744d28f7004aL);
    b.origin("r:cf36dc58-6ee9-4602-8e57-b62fe23c125a(SrdLang.structure)/9044129297345971856");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSharedTestCase() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SrdLang", "SharedTestCase", 0x1ebab0354f0e4c1aL, 0x81628b734f2fc0d1L, 0x7d8333ad9702868cL);
    b.class_(false, false, true);
    b.super_("SrdLang.structure.TestCase", 0x1ebab0354f0e4c1aL, 0x81628b734f2fc0d1L, 0x5d28744d28f70035L);
    b.origin("r:cf36dc58-6ee9-4602-8e57-b62fe23c125a(SrdLang.structure)/9044129297345971852");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSharedUseCase() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SrdLang", "SharedUseCase", 0x1ebab0354f0e4c1aL, 0x81628b734f2fc0d1L, 0x7d8333ad9702868bL);
    b.class_(false, false, true);
    b.super_("SrdLang.structure.UseCase", 0x1ebab0354f0e4c1aL, 0x81628b734f2fc0d1L, 0x5d28744d28f70059L);
    b.origin("r:cf36dc58-6ee9-4602-8e57-b62fe23c125a(SrdLang.structure)/9044129297345971851");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTestCase() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SrdLang", "TestCase", 0x1ebab0354f0e4c1aL, 0x81628b734f2fc0d1L, 0x5d28744d28f70035L);
    b.class_(false, true, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:cf36dc58-6ee9-4602-8e57-b62fe23c125a(SrdLang.structure)/6712743119344304181");
    b.version(2);
    b.prop("given", 0x5d28744d28f70038L, "6712743119344304184");
    b.prop("when", 0x5d28744d28f7003aL, "6712743119344304186");
    b.prop("then", 0x5d28744d28f7003dL, "6712743119344304189");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTestCaseReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SrdLang", "TestCaseReference", 0x1ebab0354f0e4c1aL, 0x81628b734f2fc0d1L, 0x5d28744d28f70041L);
    b.class_(false, false, false);
    b.origin("r:cf36dc58-6ee9-4602-8e57-b62fe23c125a(SrdLang.structure)/6712743119344304193");
    b.version(2);
    b.associate("testCase", 0x5d28744d28f70042L).target(0x1ebab0354f0e4c1aL, 0x81628b734f2fc0d1L, 0x7d8333ad9702868cL).optional(false).origin("6712743119344304194").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUniqueFeature() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SrdLang", "UniqueFeature", 0x1ebab0354f0e4c1aL, 0x81628b734f2fc0d1L, 0x5d28744d28f70052L);
    b.class_(false, false, false);
    b.super_("SrdLang.structure.Feature", 0x1ebab0354f0e4c1aL, 0x81628b734f2fc0d1L, 0x5d28744d28f7004aL);
    b.origin("r:cf36dc58-6ee9-4602-8e57-b62fe23c125a(SrdLang.structure)/6712743119344304210");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUniqueTestCase() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SrdLang", "UniqueTestCase", 0x1ebab0354f0e4c1aL, 0x81628b734f2fc0d1L, 0x5d28744d28f70047L);
    b.class_(false, false, false);
    b.super_("SrdLang.structure.TestCase", 0x1ebab0354f0e4c1aL, 0x81628b734f2fc0d1L, 0x5d28744d28f70035L);
    b.origin("r:cf36dc58-6ee9-4602-8e57-b62fe23c125a(SrdLang.structure)/6712743119344304199");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUniqueUseCase() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SrdLang", "UniqueUseCase", 0x1ebab0354f0e4c1aL, 0x81628b734f2fc0d1L, 0x5d28744d28f70067L);
    b.class_(false, false, false);
    b.super_("SrdLang.structure.UseCase", 0x1ebab0354f0e4c1aL, 0x81628b734f2fc0d1L, 0x5d28744d28f70059L);
    b.origin("r:cf36dc58-6ee9-4602-8e57-b62fe23c125a(SrdLang.structure)/6712743119344304231");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUseCase() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SrdLang", "UseCase", 0x1ebab0354f0e4c1aL, 0x81628b734f2fc0d1L, 0x5d28744d28f70059L);
    b.class_(false, true, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0x1ebab0354f0e4c1aL, 0x81628b734f2fc0d1L, 0x7d8333ad970aedb1L);
    b.origin("r:cf36dc58-6ee9-4602-8e57-b62fe23c125a(SrdLang.structure)/6712743119344304217");
    b.version(2);
    b.aggregate("features", 0x5d28744d28f7005cL).target(0x1ebab0354f0e4c1aL, 0x81628b734f2fc0d1L, 0x5d28744d28f70052L).optional(true).ordered(true).multiple(true).origin("6712743119344304220").done();
    b.aggregate("featureReferences", 0x5d28744d28f7005eL).target(0x1ebab0354f0e4c1aL, 0x81628b734f2fc0d1L, 0x5d28744d28f70053L).optional(true).ordered(true).multiple(true).origin("6712743119344304222").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUseCaseReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SrdLang", "UseCaseReference", 0x1ebab0354f0e4c1aL, 0x81628b734f2fc0d1L, 0x5d28744d28f70061L);
    b.class_(false, false, false);
    b.origin("r:cf36dc58-6ee9-4602-8e57-b62fe23c125a(SrdLang.structure)/6712743119344304225");
    b.version(2);
    b.associate("useCase", 0x5d28744d28f70062L).target(0x1ebab0354f0e4c1aL, 0x81628b734f2fc0d1L, 0x7d8333ad9702868bL).optional(false).origin("6712743119344304226").done();
    return b.create();
  }
}
